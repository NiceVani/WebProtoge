import { useState, useEffect } from "react";
import SearchBar from "../components/SearchBar";
import PlaceList from "../components/PlaceList";

export default function Home() {

  const [places, setPlaces] = useState([]);

  const [selectedProvince, setSelectedProvince] = useState("");
  const [language, setLanguage] = useState("th");
  const [selectedInfo, setSelectedInfo] = useState(""); // ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô ‡∏Ñ‡∏≥‡∏Ç‡∏ß‡∏±‡∏ç)
  // const [query, setQuery] = useState("");
  // const [error, setError] = useState("");
  //////////////////////////////////////
  //                                 //
  //  ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥‡πÄ‡∏õ‡πá‡∏ô SearchBar      //
  //                                //
  ////////////////////////////////////


  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î
  // useEffect(() => {
  //   fetch("http://localhost:5000/provinces")
  //     .then((res) => res.json())
  //     .then((data) => {
  //       if (Array.isArray(data)) {
  //         setPlaces(data);
  //         setError("");
  //       } else {
  //         setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
  //       }
  //     })
  //     .catch(() => setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ"));
  // }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
  // const searchPlaces = () => {
  //   if (!query.trim())  {
  //       fetch("http://localhost:5000/provinces")
  //         .then((res) => res.json())
  //         .then((data) => setPlaces(data))
  //         .catch((err) => console.error("Error loading provinces:", err));
  //       return;
  //     };

  //   fetch(`http://localhost:5000/province?q=${query}`)
  //     .then((res) => res.json())
  //     .then((data) => {
  //       if (Array.isArray(data)) {
  //         setPlaces(data);
  //       } else {
  //         setPlaces([]); // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô array ‡∏ß‡πà‡∏≤‡∏á
  //       }
  //     })
  //     .catch((err) => console.error("Error searching province:", err));
  // };


  // return (
  //   <div className="max-w-3xl mx-auto p-4">
  //     <h1 className="text-2xl font-bold text-center">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</h1>
  //     <div className="text-center my-4">
  //       <button
  //         className={`px-4 py-2 mx-2 border ${language === "th" ? "bg-blue-500 text-white" : "bg-gray-200"}`}
  //         onClick={() => setLanguage("th")}
  //       >
  //         üáπüá≠ ‡πÑ‡∏ó‡∏¢
  //       </button>
  //       <button
  //         className={`px-4 py-2 mx-2 border ${language === "en" ? "bg-blue-500 text-white" : "bg-gray-200"}`}
  //         onClick={() => setLanguage("en")}
  //       >
  //         üá¨üáß English
  //       </button>
  //     </div>

  //     <SearchBar query={query} setQuery={setQuery} searchPlaces={searchPlaces} language={language}/>
  //     {error && <p className="text-red-500 text-center">{error}</p>}
  //     <PlaceList places={places} language={language} />
  //   </div>
  // );

  useEffect(() => {
    fetch("http://localhost:5000/provinces")
      .then((res) => res.json())
      .then((data) => setPlaces(data))
      .catch((err) => console.error("Error loading provinces:", err));
  }, []);

  // **‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î**
  const handleProvinceChange = (e) => {
    setSelectedProvince(e.target.value);
  };

  // **‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π**
  const handleInfoChange = (e) => {
    setSelectedInfo(e.target.value);
  };

  // ‡∏´‡∏≤‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const selectedPlace = places.find((p) => p.name_th === selectedProvince || p.name_en === selectedProvince);

  return (
    <div className="max-w-3xl mx-auto p-4">
      <h1 className="text-2xl font-bold text-center">
        {language === "th" ? "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" : "Search for Provinces"}
      </h1>

      {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏†‡∏≤‡∏©‡∏≤ */}
      <div className="flex justify-end">
        <button
          onClick={() => setLanguage(language === "th" ? "en" : "th")}
          className="p-2 bg-gray-200 rounded"
        >
          {language === "th" ? "Switch to English" : "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"}
        </button>
      </div>

      {/* ‚úÖ Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î */}
      <div className="mt-4">
        <label className="block font-bold">{language === "th" ? "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" : "Select Province"}:</label>
        <select value={selectedProvince} onChange={handleProvinceChange} className="border p-2 w-full">
          <option value="">{language === "th" ? "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" : "Please select a province"}</option>
          {places.map((place) => (
            <option key={place.name_th} value={language === "th" ? place.name_th : place.name_en}>
              {language === "th" ? place.name_th : place.name_en}
            </option>
          ))}
        </select>
      </div>

      {/* ‚úÖ Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π */}
      <div className="mt-4">
        <label className="block font-bold">{language === "th" ? "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π" : "Select Information"}:</label>
        <select value={selectedInfo} onChange={handleInfoChange} className="border p-2 w-full">
          <option value="">{language === "th" ? "" : ""}</option>
          <option value="motto">{language === "th" ? "‡∏Ñ‡∏≥‡∏Ç‡∏ß‡∏±‡∏ç" : "Motto"}</option>
          <option value="tree">{language === "th" ? "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" : "Provincial Tree"}</option>
          <option value="flower">{language === "th" ? "‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" : "Provincial Flower"}</option>
          <option value="seal">{language === "th" ? "‡∏ï‡∏£‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" : "Provincial Seal"}</option>
          <option value="location">{language === "th" ? "‡∏û‡∏¥‡∏Å‡∏±‡∏î" : "Coordinates"}</option>
          <option value="website">{language === "th" ? "‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå" : "Website"}</option>
          <option value="traditional">{language === "th" ? "‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πà‡∏≤" : "Traditional Name"}</option>
        </select>
      </div>

      {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
      <div className="mt-4 p-4 border">
        {selectedPlace ? (
          <>
            <h2 className="text-xl font-bold">{language === "th" ? selectedPlace.name_th : selectedPlace.name_en}</h2>
            <p>
              <strong>
                {language === "th" ? "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" : "Information"}:</strong>
              {selectedInfo === "motto" && (language === "th" ? selectedPlace.motto_th : selectedPlace.motto_en)}
              {selectedInfo === "tree" && (language === "th" ? selectedPlace.tree_th : selectedPlace.tree_en)}
              {selectedInfo === "flower" && (language === "th" ? selectedPlace.flower_th : selectedPlace.flower_en)}
              {selectedInfo === "seal" && (language === "th" ? selectedPlace.seal_th : selectedPlace.seal_en)}
             
              {selectedInfo === "location" && (
                language === "th"
                  ? `‡∏û‡∏¥‡∏Å‡∏±‡∏î: ‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î ${selectedPlace.latitude}, ‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î ${selectedPlace.longitude}`
                  : `Location: Latitude ${selectedPlace.latitude}, Longitude ${selectedPlace.longitude}`
              )}
              {selectedInfo === "website" && (
                <p>
                  {language === "th" ? "‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå: " : "Website: "}
                  <a href={selectedPlace.website} target="_blank" rel="noopener noreferrer" className="text-blue-500">
                    {selectedPlace.website || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}
                  </a>
                </p>
              )}
              {selectedInfo === "traditional" && (
  <>
    <p>
      <strong>{language === "th" ? "‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ö‡∏£‡∏≤‡∏ì:" : "Traditional Names:"}</strong>
    </p>
    <ul>
      {language === "th"
        ? [].concat(selectedPlace.traditional_names_th || []).map((name, index) => <li key={index}>{name}</li>)
        : [].concat(selectedPlace.traditional_names_en || []).map((name, index) => <li key={index}>{name}</li>)
      }
    </ul>
  </>
)}


            </p>
          </>
        ) : (
          <p>{language === "th" ? "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" : "Please select a province"}</p>
        )}
      </div>
    </div>
  );
}
